{
	"name": "Dates",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AZUREsqlDATESDataLake",
						"type": "DatasetReference"
					},
					"name": "SQLserver",
					"description": "Import data from Parquet12 (dates)"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "containerDATEdatalake",
						"type": "DatasetReference"
					},
					"name": "containerDATEdatalake"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          DateKey as integer,",
				"          FullDate as date,",
				"          isWeekDay as boolean,",
				"          DayOfWeek as integer,",
				"          DayOfMonth as integer,",
				"          DayOfQuarter as integer,",
				"          DayOfYear as integer,",
				"          DayName as string,",
				"          WeekOfYear as integer,",
				"          WeekName as string,",
				"          MonthOfYear as integer,",
				"          MonthName as string,",
				"          CalendarQuarter as integer,",
				"          CalendarQuarterName as string,",
				"          CalendarYear as integer,",
				"          FiscalMonth as integer,",
				"          FiscalMonthName as string,",
				"          FiscalQuarter as integer,",
				"          FiscalQuarterName as string,",
				"          FiscalYear as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> SQLserver",
				"SQLserver sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          DayOfMonth as integer,",
				"          MonthName as string,",
				"          CalendarYear as integer,",
				"          CalendarQuarter as integer,",
				"          DayOfYear as integer",
				"     ),",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> containerDATEdatalake"
			]
		}
	}
}